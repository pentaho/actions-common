name: Pentaho merge workflow
on:
  workflow_call:
    inputs:
      modules_to_build:
        type: string
        required: false
        description: "The modules to build when running from the root of the project. Defaults to everything ('.')"
      version:
        type: string
        required: true
        description: "Version to be built"
      base_version:
        type: string
        required: true
        description: "Base version to be taken in consideration for dependencies"
      slack_channels:
        type: string
        required: true
        description: "Slack channel(s) to send notifications to."
      arti_host:
        required: false
        type: string
        default: https://repo.orl.eng.hitachivantara.com
        description: "Artifactory's Host name"
      sonar_project_key:
        required: true
        type: string
        description: "Sonar's project identifier key"
      sonar_url:
        required: false
        type: string
        description: "Sonar's URL"
        default: https://sonar.orl.eng.hitachivantara.com
      blackduck_project_key:
        required: false
        type: string
        description: "Project key for Blackduck"
        default: "Pentaho"  # it's either "Pentaho" or "Pentaho SHIMS" on Orion
      blackduck_server_url:
        required: false
        type: string
        description: "Server URL for Blackduck"
        default: https://orion.orl.eng.hitachivantara.com
      blackduck_additional_args:
        required: false
        type: string
        description: "Extra additional args for blackduck scan"
        default: ""

      

env:
  VERSION: "${{ inputs.version }}"
  BASE_VERSION: "${{ inputs.base_version }}"
  SLACK_CHANNEL: "${{ inputs.slack_channels }}"
  BUILD_NAME: "${{ github.event.repository.name }}-$VERSION"

  SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
  SONAR_HOST_URL: ${{ inputs.sonar_url }}
  SONAR_LOGIN: ${{secrets.WINGMAN_SONAR_TOKEN}}

  ARTIFACTORY_HOST: ${{ inputs.arti_host }}
  ARTIFACTORY_BASE_URL: ${ARTIFACTORY_HOST}/artifactory

  RESOLVE_REPO_MIRROR: ${ARTIFACTORY_BASE_URL}/pnt-mvn

  NEXUS_DEPLOY_USER: ${{ secrets.ARTIFACTORY_USER }}
  NEXUS_DEPLOY_PASSWORD: ${{ secrets.ARTIFACTORY_API_KEY }}

  PUBLIC_RELEASE_REPO_URL: ${ARTIFACTORY_BASE_URL}/pntpub-mvn-dev-orl
  PRIVATE_RELEASE_REPO: pntprv-mvn-dev-orl
  PRIVATE_RELEASE_REPO_URL: ${ARTIFACTORY_BASE_URL}/${PRIVATE_RELEASE_REPO}

  PUBLIC_SNAPSHOT_REPO_URL: ${ARTIFACTORY_BASE_URL}/pntpub-mvn-snapshot-orl
  PRIVATE_SNAPSHOT_REPO: pntprv-mvn-snapshot-orl
  PRIVATE_SNAPSHOT_REPO_URL: ${ARTIFACTORY_BASE_URL}/${PRIVATE_SNAPSHOT_REPO}

  DOCKER_PULL_HOST: pnt-docker.repo.orl.eng.hitachivantara.com/
  DOCKER_PUBLIC_PUSH_HOST: pntpub-docker-dev-orl.repo.orl.eng.hitachivantara.com
  DOCKER_PRIVATE_PUSH_HOST: pntprv-docker-dev-orl.repo.orl.eng.hitachivantara.com

jobs:

  setup-maven-settings:
    name: Setup Maven settings

    runs-on: [ k8s ]

    container:
      image: docker.repo.orl.eng.hitachivantara.com/pentaho/actions-common:20230712.10
      volumes:
        - /home/runner/caches/pentaho/.m2:/root/.m2

    steps:

      - name: Retrieve settings file
        id: common-maven
        uses: pentaho/actions-common@1.0.0

      - name: Copy settings.xml to .m2 directory
        shell: sh
        run: |
          cp "${{ steps.common-maven.outputs.settings-file-path }}" /root/.m2

  snapshot:
    name: Update Snapshots
    needs: setup-maven-settings

    runs-on: [ k8s ]

    container:
      image: docker.repo.orl.eng.hitachivantara.com/pentaho/actions-common:20230712.10
      volumes:
        - /home/runner/caches/pentaho/.m2:/root/.m2
    steps:

      - run: |
          echo ${{ needs.setup-maven-settings.env }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine which changes occurred
        if: ${{ inputs.modules_to_build == '' }}
        id: change_detection
        uses: hv-actions/change-detection-builder@1.0.1

      - name: Build code and deploy artifacts
        uses: lumada-common-services/gh-composite-actions@1.3.1
        with:
          command: mvn clean deploy -DskipTests -pl "${{ inputs.modules_to_build || steps.change_detection.outputs.changed_modules }}" -amd
        env:
          cmd_type: BUILD

  release-candidate:
    name: Build Release Candidate
    needs: setup-maven-settings

    runs-on: [ k8s ]

    env:
      JFROG_CLI_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    container:
      image: docker.repo.orl.eng.hitachivantara.com/pentaho/actions-common:20230712.10
      volumes:
        - /home/runner/caches/pentaho/.m2:/root/.m2
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - name: Determine which changes occurred
        if: ${{ inputs.modules_to_build == '' }}
        id: change_detection
        uses: hv-actions/change-detection-builder@1.0.1

      - name: Determine version
        id: version
        run: |
          version="${{ env.VERSION }}-${{ github.run_number }}"
          echo "current-version=$version" >> $GITHUB_OUTPUT

      - name: Version set
        run: |
          sed -i 's/BASE_VERSION/${{ env.BASE_VERSION }}/g' .github/release-versions.properties
          sed -i 's/BUILD_NBR/${{ github.run_number }}/g' .github/release-versions.properties
          
          java -DRELEASE_MODE=true -jar /version-merger.jar . \
            -f .github/release-versions.properties \
            commit project.revision=${{ steps.version.outputs.current-version }} \
            project.version=${{ steps.version.outputs.current-version }} \
            version=${{ steps.version.outputs.current-version }} \
            distribution.version=${{ steps.version.outputs.current-version }} \
            project.stage=master

      - name: Build code and deploy artifacts
        uses: lumada-common-services/gh-composite-actions@1.3.1
        with:
          command: |
            mvn clean deploy -DskipTests \
              -Pcicd-release -Drelease -Dbuild.name=${{ env.BUILD_NAME }} -Dbuild.number=${{ github.run_number }} \
              -pl "${{ inputs.modules_to_build || steps.change_detection.outputs.changed_modules }}" -amd
        env:
          cmd_type: BUILD

      - name: Run unit-tests
        uses: lumada-common-services/gh-composite-actions@1.3.1
        with:
          command: |
            mvn verify -B -Daudit \
              -pl "${{ inputs.modules_to_build || steps.change_detection.outputs.changed_modules }}" -amd
        env:
          cmd_type: UNIT_TEST

      #- name: Blackduck Scan
      #  uses: lumada-common-services/gh-composite-actions@1.2.0
      #  env:
      #    BlackDuck_Project_Version: ${{ steps.version.outputs.current-version }}
      #    BlackDuck_Project_Name: "${{ inputs.blackduck_project_key }}"
      #    BlackDuck_Api_Token: "${{ secrets.ORION_BLACKDUCK_TOKEN }}"
      #    BlackDuck_Url: "${{ inputs.blackduck_server_url }}"
      #    ADDITIONAL_ARGS: ${{ inputs.blackduck_additional_args }}

      - name: Sonarqube scan
        continue-on-error: true
        uses: lumada-common-services/gh-composite-actions@1.3.1
        env:
          sonar_utility: sonar-scanner
          sonar_commands: '("-Dsonar.projectKey=${{env.SONAR_PROJECT_KEY}} -Dsonar.host.url=${{env.SONAR_HOST_URL}} -Dsonar.login=${{env.SONAR_LOGIN}}")'

      - name: Tag release
        uses: lumada-common-services/gh-composite-actions@1.3.1
        env:
          Tag_version: "${{ steps.version.outputs.current-version }}"
          push_tag_only: true

      - name: Create artifacts download links
        shell: bash
        run: |
          jf config add artifactory --interactive=false --enc-password=false --basic-auth-only \
            --artifactory-url ${{ env.ARTIFACTORY_BASE_URL }} \
            --password ${{ env.NEXUS_DEPLOY_PASSWORD }} \
            --user ${{ env.NEXUS_DEPLOY_USER }}
          
          resp=$(jf rt search --props "build.name=${{ env.BUILD_NAME }};build.number=${{ github.run_number }}" \
            "*-${{ steps.version.outputs.current-version }}.zip")
          
          echo "| :gift: Files |" >> $GITHUB_STEP_SUMMARY
          echo "|:----:|" >> $GITHUB_STEP_SUMMARY
          
          echo "$resp" | jq -r '.[].path' | while read -r path; do
            link_text=$(echo "$path" | sed 's/.*\///')
            echo "| [ $link_text ](${{ env.ARTIFACTORY_BASE_URL }}/$path) |" >> $GITHUB_STEP_SUMMARY; 
          done
          
          echo "|[Full artifacts list](${{ env.ARTIFACTORY_HOST }}/ui/builds/${{ env.BUILD_NAME }}/${{ github.run_number }})|" >> $GITHUB_STEP_SUMMARY

      - name: Report notifications
        if: always()
        uses: lumada-common-services/gh-composite-actions@1.3.1
        env:
          Slack_Token: ${{ secrets.SLACK_TOKEN }}
          Slack_Channel: ${{ env.SLACK_CHANNEL }}
          report: true
